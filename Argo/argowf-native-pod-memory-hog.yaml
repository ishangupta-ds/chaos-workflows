apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  generateName: argowf-chaos-pod-memory-
spec:
  entrypoint: argowf-chaos
  serviceAccountName: argo-chaos
  arguments:
    parameters:
      - name: adminModeNamespace
        value: "litmus"
  templates:
    - name: argowf-chaos
      steps:
        - - name: install-experiment
            template: install-experiment
        - - name: run-benchmark
            template: run-benchmark
          - name: run-chaos
            template: run-chaos
        - - name: revert-chaos
            template: revert-chaos

    - name: install-experiment
      inputs:
        artifacts:
        - name:
          path: /tmp/pod-memory-hog.yaml
          raw:
            data: |
              apiVersion: litmuschaos.io/v1alpha1
              description:
                message: |
                  Injects memory consumption on pods belonging to an app deployment
              kind: ChaosExperiment
              metadata:
                name: pod-memory-hog
                version: 0.1.3
              spec:
                definition:
                scope: Namespaced
                permissions:
                  - apiGroups:
                      - ""
                      - "batch"
                      - "litmuschaos.io"
                    resources:
                      - "jobs"
                      - "pods"
                      - "pods/log"
                      - "events"
                      - "chaosengines"
                      - "chaosexperiments"
                      - "chaosresults"
                    verbs:
                      - "create"
                      - "list"
                      - "get"
                      - "patch"
                      - "update"
                      - "delete"
                image: "litmuschaos/go-runner:ci"
                args:
                  - -c
                  - ./experiments/pod-memory-hog
                command:
                  - /bin/bash
                env:
                  - name: TOTAL_CHAOS_DURATION
                    value: '30'

                  - name: CHAOS_INTERVAL
                    value: '10'

                  ## enter the amount of memory in megabytes to be consumed by the application pod
                  - name: MEMORY_CONSUMPTION
                    value: '500'

                  ## percentage of total pods to target
                  - name: PODS_AFFECTED_PERC
                    value: ''

                  ## Period to wait before and after injection of chaos in sec
                  - name: RAMP_TIME
                    value: ''     

                  ## env var that describes the library used to execute the chaos
                  ## default: litmus. Supported values: litmus, powerfulseal, chaoskube
                  - name: LIB
                    value: 'litmus'

                  - name: TARGET_POD
                    value: ''

                labels:
                  name: pod-memory-hog
      container:
        image: lachlanevenson/k8s-kubectl
        command: [sh, -c]
        args: ['kubectl apply -f /tmp/pod-memory-hog.yaml -n {{workflow.parameters.adminModeNamespace}}']


    - name: run-chaos
      inputs:
        artifacts:
        - name: run-chaos
          path: /tmp/chaosengine.yaml
          raw:
            data: |
              apiVersion: litmuschaos.io/v1alpha1
              kind: ChaosEngine
              metadata:
                name: nginx-chaos
                namespace: {{workflow.parameters.adminModeNamespace}}
              spec:
                appinfo:
                  appns: kube-system
                  applabel: "k8s-app=kube-proxy"
                  appkind: daemonset
                jobCleanUpPolicy: retain
                monitoring: false
                annotationCheck: 'false'
                engineState: 'active'
                chaosServiceAccount: litmus-admin
                experiments:
                  - name: pod-memory-hog
                    spec:
                      components:
                        experimentImage: "litmuschaos/go-runner:ci"
                        env:
                          - name: TARGET_CONTAINER
                            value: 'nginx'

                          - name: MEMORY_CONSUMPTION
                            value: '500'

                          - name: TOTAL_CHAOS_DURATION
                            value: '240' # in seconds
              
                          - name: CHAOS_KILL_COMMAND
                            value: "kill -9 $(ps afx | grep \"[dd] if /dev/zero\" | awk '{print $1}' | tr '\n' ' ')"
      container:
        image: lachlanevenson/k8s-kubectl
        command: [sh, -c]
        args: ['kubectl apply -f /tmp/chaosengine.yaml -n {{workflow.parameters.adminModeNamespace}} | echo "sleeping for 120s" | sleep 120 ']

    - name: run-benchmark
      inputs:
        artifacts:
        - name: run-benchmark
          path: /tmp/bench.yaml
          raw:
            data: |
              apiVersion: batch/v1
              kind: Job
              metadata:
                labels:
                  app: nginx-bench
                generateName: nginx-bench-
              spec:
                template:
                  metadata:
                    labels:
                      app: nginx-bench
                  spec:
                    restartPolicy: Never
                    containers:
                    - args:
                      - -c
                      - /go/bin/main -r -c10 -t${BENCHMARK_DURATION} -n 10000000 http://${NGINX_SVC_NAME}:${NGINX_PORT_NUM}/; exit 0
                      command:
                      - /bin/sh
                      env:
                        - name: NGINX_SVC_NAME
                          value: "nginx.default.svc.cluster.local"
                        - name: NGINX_PORT_NUM
                          value: "80"
                        - name: BENCHMARK_DURATION
                          value: "300"
                      image: devth/alpine-bench
                      imagePullPolicy: Always
                      name: nginx-bench
      container:
        image: lachlanevenson/k8s-kubectl
        command: [sh, -c]
        args: ['kubectl create -f /tmp/bench.yaml -n {{workflow.parameters.appNamespace}}']

    - name: revert-chaos
      container:
        image: lachlanevenson/k8s-kubectl
        command: [sh, -c]
        args: [' sleep 20 | kubectl delete chaosengine nginx-chaos -n {{workflow.parameters.adminModeNamespace}}']

